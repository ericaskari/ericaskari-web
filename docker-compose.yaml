version: '3.8'

services:
  ericaskari-postgres:
    container_name: ericaskari-postgres
    image: postgres:14.1
    restart: 'no'
    networks:
      - ericaskari-network
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - ericaskari-postgres:/var/lib/postgresql/data
    env_file:
      - .docker.env
  ericaskari-minio:
    container_name: ericaskari-minio
    image: minio/minio
    restart: 'no'
    networks:
      - ericaskari-network
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - ericaskari-minio:/data
    command: 'server --address 0.0.0.0:9000 /data'
    env_file:
      - .docker.env
  ericaskari-mailhog:
    container_name: ericaskari-mailhog
    image: mailhog/mailhog:v1.0.1
    restart: 'no'
    networks:
      - ericaskari-network
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - '1025:1025'
      - '8025:8025'
  ericaskari-proxy:
    container_name: ericaskari-proxy
    image: nginx
    restart: 'no'
    networks:
      - ericaskari-network
    volumes:
      - ./.github/development/proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./.github/development/proxy/default.conf:/etc/nginx/conf.d/default.conf
      - ./ssl.key:/ssl.key
      - ./ssl.crt:/ssl.crt
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - '443:443'
volumes:
  ericaskari-postgres:
  ericaskari-minio:
  ericaskari-pgadmin4:
networks:
  ericaskari-network:

  #  ericaskari-backend:
  #    container_name: ericaskari-backend
  #    build:
  #      dockerfile: ./assets/development/Dockerfile
  #      target: Backend
  #      context: ./
  #    volumes:
  #      - source: ./api/src
  #        target: /app/api/src
  #        type: bind
  #        read_only: true
  #        consistency: cached
  #    restart: on-failure
  #    networks:
  #      - ericaskari-network
  #    environment:
  #      NODE_OPTIONS: --max_old_space_size=4096
  #
  #
  #  ericaskari-frontend:
  #    container_name: ericaskari-frontend
  #    build:
  #      dockerfile: ./assets/development/Dockerfile
  #      target: Frontend
  #      context: ./
  #    volumes:
  #      - source: ./web/src
  #        target: /app/web/src
  #        type: bind
  #        read_only: true
  #        consistency: cached
  #    restart: on-failure
  #    networks:
  #      - ericaskari-network
  #    environment:
  #      NODE_OPTIONS: --max_old_space_size=4096
