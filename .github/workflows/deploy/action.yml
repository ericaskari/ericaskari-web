inputs:
  VERSION:
    description: 'VERSION'
    required: true
  APP_NAMESPACE:
    description: 'APP_NAMESPACE'
    required: true
  APP_NODE_ENV:
    description: 'APP_NODE_ENV'
    required: true
  APP_HOST_NAME:
    description: 'APP_HOST_NAME'
    required: true
  APP_ENABLE_SWAGGER:
    description: 'APP_ENABLE_SWAGGER'
    required: true
  APP_NODE_MAILER_HOST:
    description: 'APP_NODE_MAILER_HOST'
    required: true
  APP_NODE_MAILER_PORT:
    description: 'APP_NODE_MAILER_PORT'
    required: true
  APP_NODE_MAILER_REJECT_UNAUTHORIZED:
    description: 'APP_NODE_MAILER_REJECT_UNAUTHORIZED'
    required: true
  APP_NODE_MAILER_AUTH_USER:
    description: 'APP_NODE_MAILER_AUTH_USER'
    required: true
  APP_NODE_MAILER_AUTH_PASS:
    description: 'APP_NODE_MAILER_AUTH_PASS'
    required: true
  APP_NODE_MAILER_SECURE:
    description: 'APP_NODE_MAILER_SECURE'
    required: true
  APP_IS_SSL_ENABLED:
    description: 'APP_IS_SSL_ENABLED'
    required: true
  APP_GOOGLE_TAG_MANAGER_ID:
    description: 'APP_GOOGLE_TAG_MANAGER_ID'
    required: true
  APP_FE_DOMAIN_ONE:
    description: 'APP_FE_DOMAIN_ONE'
    required: true
  APP_FE_DOMAIN_TWO:
    description: 'APP_FE_DOMAIN_TWO'
    required: true
  APP_MEET_FE_DOMAIN_ONE:
    description: 'APP_MEET_FE_DOMAIN_ONE'
    required: true
name: ConfigureKubectl
description: ConfigureKubectl
runs:
    using: 'composite'
    steps:
        - run: whoami
          shell: bash
        - run: pwd
          shell: bash
        - run: kubectl get all
          shell: bash
        - run: |
            export FE_TAG="438380764554.dkr.ecr.eu-west-1.amazonaws.com/ericaskari-frontend:${{ inputs.VERSION }}"
            export BE_TAG="438380764554.dkr.ecr.eu-west-1.amazonaws.com/ericaskari-backend:${{ inputs.VERSION }}"
            
            # Assign container images    
            yq e -i '.spec.template.spec.containers[0].image=env(BE_TAG)'                     ./.github/deployment/backend-02-deployment.yml
            yq e -i ".spec.template.spec.containers[0].image=env(FE_TAG)"                     ./.github/deployment/frontend-02-deployment.yml
            
            # Assign Env variables Backend       
            yq e -i '.spec.template.spec.containers[0].env += [{"name": "APP_NODE_ENV",                         "value": "${{ inputs.APP_NODE_ENV }}"}]'                        ./.github/deployment/backend-02-deployment.yml
            yq e -i '.spec.template.spec.containers[0].env += [{"name": "APP_HOST_NAME",                        "value": "${{ inputs.APP_HOST_NAME }}"}]'                       ./.github/deployment/backend-02-deployment.yml
            yq e -i '.spec.template.spec.containers[0].env += [{"name": "APP_ENABLE_SWAGGER",                   "value": "${{ inputs.APP_ENABLE_SWAGGER }}"}]'                  ./.github/deployment/backend-02-deployment.yml
            yq e -i '.spec.template.spec.containers[0].env += [{"name": "APP_NODE_MAILER_HOST",                 "value": "${{ inputs.APP_NODE_MAILER_HOST }}"}]'                ./.github/deployment/backend-02-deployment.yml
            yq e -i '.spec.template.spec.containers[0].env += [{"name": "APP_NODE_MAILER_PORT",                 "value": "${{ inputs.APP_NODE_MAILER_PORT }}"}]'                ./.github/deployment/backend-02-deployment.yml
            yq e -i '.spec.template.spec.containers[0].env += [{"name": "APP_NODE_MAILER_REJECT_UNAUTHORIZED",  "value": "${{ inputs.APP_NODE_MAILER_REJECT_UNAUTHORIZED }}"}]' ./.github/deployment/backend-02-deployment.yml
            yq e -i '.spec.template.spec.containers[0].env += [{"name": "APP_NODE_MAILER_AUTH_USER",            "value": "${{ inputs.APP_NODE_MAILER_AUTH_USER }}"}]'           ./.github/deployment/backend-02-deployment.yml
            yq e -i '.spec.template.spec.containers[0].env += [{"name": "APP_NODE_MAILER_AUTH_PASS",            "value": "${{ inputs.APP_NODE_MAILER_AUTH_PASS }}"}]'           ./.github/deployment/backend-02-deployment.yml
            yq e -i '.spec.template.spec.containers[0].env += [{"name": "APP_NODE_MAILER_SECURE",               "value": "${{ inputs.APP_NODE_MAILER_SECURE }}"}]'              ./.github/deployment/backend-02-deployment.yml
            yq e -i '.spec.template.spec.containers[0].env += [{"name": "APP_IS_SSL_ENABLED",                   "value": "${{ inputs.APP_IS_SSL_ENABLED }}"}]'                  ./.github/deployment/backend-02-deployment.yml
            
            # Assign Env variables Frontend       
            yq e -i '.spec.template.spec.containers[0].env += [{"name": "APP_GOOGLE_TAG_MANAGER_ID",            "value": "${{ inputs.APP_GOOGLE_TAG_MANAGER_ID }}"}]'     ./.github/deployment/frontend-02-deployment.yml
            
            # Other configurations          
            yq e -i '.spec.tls[0].hosts[0]="${{ inputs.APP_FE_DOMAIN_ONE }}"'                  ./.github/deployment/frontend-04-ingress.yml
            yq e -i '.spec.tls[0].hosts[1]="${{ inputs.APP_FE_DOMAIN_TWO }}"'                  ./.github/deployment/frontend-04-ingress.yml
            yq e -i '.spec.tls[0].hosts[2]="${{ inputs.APP_MEET_FE_DOMAIN_ONE }}"'             ./.github/deployment/frontend-04-ingress.yml
            yq e -i '.spec.rules[0].host="${{ inputs.APP_FE_DOMAIN_ONE }}"'                    ./.github/deployment/frontend-04-ingress.yml
            yq e -i '.spec.rules[1].host="${{ inputs.APP_FE_DOMAIN_TWO }}"'                    ./.github/deployment/frontend-04-ingress.yml
            yq e -i '.spec.rules[2].host="${{ inputs.APP_MEET_FE_DOMAIN_ONE }}"'               ./.github/deployment/frontend-04-ingress.yml
            yq e -i '.metadata.annotations.["traefik.ingress.kubernetes.io/router.middlewares"]="${{ inputs.APP_NAMESPACE }}-redirect@kubernetescrd"' ./.github/deployment/frontend-04-ingress.yml
          shell: bash
        - run: |
            kubectl create namespace "${{ inputs.APP_NAMESPACE }}" || true
            kubectl delete secret --namespace="${{ inputs.APP_NAMESPACE }}" regcred || true
            kubectl create secret docker-registry regcred --namespace="${{ inputs.APP_NAMESPACE }}" --docker-server=438380764554.dkr.ecr.eu-west-1.amazonaws.com --docker-username=AWS --docker-password="$(aws ecr get-login-password)" || true
            #kubectl apply  --namespace="${{ inputs.APP_NAMESPACE }}" --filename=./.github/deployment/shared-01-mirror-secret-production.yaml
            kubectl apply   --namespace="${{ inputs.APP_NAMESPACE }}" --filename=./.github/deployment/backend-01-secret.yml
            kubectl apply   --namespace="${{ inputs.APP_NAMESPACE }}" --filename=./.github/deployment/backend-02-deployment.yml
            kubectl apply   --namespace="${{ inputs.APP_NAMESPACE }}" --filename=./.github/deployment/backend-03-service.yml
            kubectl apply   --namespace="${{ inputs.APP_NAMESPACE }}" --filename=./.github/deployment/frontend-01-secret.yml
            kubectl apply   --namespace="${{ inputs.APP_NAMESPACE }}" --filename=./.github/deployment/frontend-02-deployment.yml
            kubectl apply   --namespace="${{ inputs.APP_NAMESPACE }}" --filename=./.github/deployment/frontend-03-service.yml
            kubectl apply   --namespace="${{ inputs.APP_NAMESPACE }}" --filename=./.github/deployment/frontend-04-ingress.yml
            kubectl apply   --namespace="${{ inputs.APP_NAMESPACE }}" --filename=./.github/deployment/frontend-05-redirect.yml
          shell: bash
